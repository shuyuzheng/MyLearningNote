sum(ri_a$ri_diff > 20)
ri_a[which(ri_a$ri_diff > 20), ]
response[response$block_id == 1145748, ]
test <- ri_a$block_id[which(ri_a$ri_diff > 1)]
response[response$block_id %in% test, ]
response[response$block_id %in% test, ] -> test2
View(test2)
cor(ri_a$sensScore, ri_a$ri_row)
plot(ri_a$sensScore, ri_a$ri_row)
test <- ri_a[which(ri_a$ri_diff > -100), ]
plot(test$sensScore, test$ri_row)
test <- ri_a[which(ri_a$ri_row > -100), ]
plot(test$sensScore, test$ri_row)
write.csv(summary_c, "./data/upload/summary.csv", row.names = FALSE)
source <- data.frame(block_id = summary_c$block_id,
assay_id = rep(79, nrow(summary)),
study_id = rep(23, nrow(summary)))
View(source)
write.csv(source, "./data/upload/source.csv", row.names = FALSE)
View(bad_quality_blocks)
summary_c$quality <- ifelse(summary_c$block_id %in% bad_quality_blocks, "bad", NA)
summary_c$quality[which(summary_c == "bad"), ]
summary_c[which(summary_c$quality == "bad"), ]
sum(is.na(summary_c$quality))
summary_c <- summary_c %>%
filter(!block_id %in% problem_block$block_id) %>%
rbind.data.frame(problem_block_c)
test <- ifelse(summary_c$block_id %in% bad_quality_blocks, "bad", NA)
sum(is.na(test))
problem_block_c <- summary_c %>%
filter(block_id %in% problem_block$block_id) %>%
select(-ri_row, -ic50_row, css_ri) %>%
left_join(new_sum, by = "block_id") %>%
mutate(css_ri = ri_row,
quality = ifelse(block_id %in% bad_quality_blocks, "bad", NA)) %>%
select(block_id, drug_row_id, drug_col_id, cell_line_id, conc_r_unit,
conc_c_unit, synergy_zip, synergy_loewe, synergy_hsa, synergy_bliss,
ic50_row, ic50_col, ri_row, ri_col, css_row, css_col, css_ri, S,
quality)
summary_c <- summary %>%
rename("ic50_row" = "row_ic50", "ri_row" = "ir_row") %>%
left_join(block_index, by = "block_id") %>%
left_join(drug_index, by = "drug_row") %>%
rename(drug_row_id = "id") %>%
left_join(cell_index, by = c("cell_line_name" = "name")) %>%
rename(cell_line_id = "id") %>%
mutate(drug_col_id = rep(NA, n()),
synergy_zip = rep(NA, n()),
synergy_loewe = rep(NA, n()),
synergy_hsa = rep(NA, n()),
synergy_bliss = rep(NA, n()),
ic50_col = rep(NA, n()),
ri_col = rep(NA, n()),
css_row = rep(NA, n()),
css_col = rep(NA, n()),
css_ri = ri_row,
S = rep(NA, n()),
quality = ifelse(block_id %in% bad_quality_blocks, "bad", NA),
) %>%
select(block_id, drug_row_id, drug_col_id, cell_line_id, conc_r_unit,
conc_c_unit, synergy_zip, synergy_loewe, synergy_hsa, synergy_bliss,
ic50_row, ic50_col, ri_row, ri_col, css_row, css_col, css_ri, S,
quality)
apply(summary_c, 2, function(x) sum(is.na(x)))
summary_c <- summary %>%
rename("ic50_row" = "row_ic50", "ri_row" = "ir_row") %>%
left_join(block_index, by = "block_id") %>%
left_join(drug_index, by = "drug_row") %>%
rename(drug_row_id = "id") %>%
left_join(cell_index, by = c("cell_line_name" = "name")) %>%
rename(cell_line_id = "id") %>%
mutate(drug_col_id = rep(NA, n()),
synergy_zip = rep(NA, n()),
synergy_loewe = rep(NA, n()),
synergy_hsa = rep(NA, n()),
synergy_bliss = rep(NA, n()),
ic50_col = rep(NA, n()),
ri_col = rep(NA, n()),
css_row = rep(NA, n()),
css_col = rep(NA, n()),
css_ri = ri_row,
S = rep(NA, n()),
quality = ifelse(block_id %in% bad_quality_blocks$block_id, "bad", NA),
) %>%
select(block_id, drug_row_id, drug_col_id, cell_line_id, conc_r_unit,
conc_c_unit, synergy_zip, synergy_loewe, synergy_hsa, synergy_bliss,
ic50_row, ic50_col, ri_row, ri_col, css_row, css_col, css_ri, S,
quality)
apply(summary_c, 2, function(x) sum(is.na(x)))
problem_block <- summary$block_id[is.na(summary$ir_row)]
problem_block <- filter(response, block_id %in% problem_block)
write.csv(problem_block, "./data/tmp/problem_block.csv", row.names = FALSE)
# add noise
problem_block$inhibition <- problem_block$inhibition +
rnorm(nrow(problem_block), 0, 0.001)
problem_block <- select(problem_block, block_id, dose = conc_r, response = inhibition)
CalculateIC50 <- function(e, type, max.conc){
if (type == "LL.4") {
ic50 <- e
} else if (type == "L.4") {
ic50 <- exp(e)
}
if (ic50 > max.conc) {
ic50 = max.conc
}
return (ic50)
}
new_sum <- NULL
for (b in unique(problem_block$block_id)) {
tmp_ri <- CalculateSens(filter(problem_block, block_id == b))
curve_tmp <- curve[curve$block_id == b, ]
tmp_ic <- CalculateIC50(curve_tmp$e, curve_tmp$model,
max(response$conc_r[response$block_id == b]))
tmp <- data.frame(block_id = b, ic50_row = tmp_ic, ri_row = tmp_ri)
new_sum <- rbind.data.frame(new_sum, tmp)
}
problem_block_c <- summary_c %>%
filter(block_id %in% problem_block$block_id) %>%
select(-ri_row, -ic50_row, css_ri) %>%
left_join(new_sum, by = "block_id") %>%
mutate(css_ri = ri_row) %>%
select(block_id, drug_row_id, drug_col_id, cell_line_id, conc_r_unit,
conc_c_unit, synergy_zip, synergy_loewe, synergy_hsa, synergy_bliss,
ic50_row, ic50_col, ri_row, ri_col, css_row, css_col, css_ri, S,
quality)
summary_c <- summary_c %>%
filter(!block_id %in% problem_block$block_id) %>%
rbind.data.frame(problem_block_c)
apply(summary_c, 2, function(x) sum(is.na(x)))
drugDataCSS$inhibitor[which(drugDataCSS$inhibitor == "Vargetef")] <- "Vargatef"
ri_a <- drugDataCSS %>%
left_join(block_index, by = c("lab_id" = "cell_line_name",
"inhibitor" = "drug_row",
"replicate",
"run_index")) %>%
left_join(summary_c, by = "block_id") %>%
select(block_id, sensScore, ri_row, inhibitor, lab_id) %>%
mutate(ri_diff = sensScore - ri_row)
max(ri_a$ri_diff, na.rm = TRUE)
cor(ri_a$sensScore, ri_a$ri_row)
write.csv(summary_c, "./data/upload/summary.csv", row.names = FALSE)
source <- data.frame(block_id = summary_c$block_id,
assay_id = rep(79, nrow(summary)),
study_id = rep(23, nrow(summary)))
write.csv(source, "./data/upload/source.csv", row.names = FALSE)
View(drugDataCSS)
ri_a <- drugDataCSS %>%
left_join(block_index, by = c("lab_id" = "cell_line_name",
"inhibitor" = "drug_row",
"replicate",
"run_index")) %>%
left_join(summary_c, by = "block_id") %>%
select(block_id, sensScore, ri_row, inhibitor, lab_id, passed_qc) %>%
mutate(ri_diff = sensScore - ri_row)
max(ri_a$ri_diff, na.rm = TRUE)
cor(ri_a$sensScore, ri_a$ri_row)
test <- ri_a[which(ri_a$ri_diff > 1), ]
View(test)
summary(drugDataCSS$passed_qc)
table(drugDataCSS$passed_qc)
table(test$passed_qc)
devtools::install_github("MilesMcBain/markdrive")
gdoc_checkout(filename = "GOT")
library(markdrive)
gdoc_checkout(filename = "GOT")
View(ri_a)
max(ri_a$ri_diff, na.rm = TRUE)
?L.4
?pdf
fstr
?fprint
?printf
?LL.4
?drc::drm
?drc::LL.4
?drc::L.4
?drc::LL.4
own_log = function(b, c, x)
{
arg = 1 + 10^(b*(c-x))
if(is.infinite(arg)==T) res = b*(c-x)*log(10) else res = log(arg)
return(res)
}
own_log(2.5, 10, 5)
b = 2.5
c = 10
x = 5
arg = 1 + 10^(b*(c-x))
arg
log(arg)
res = b*(c-x)*log(10)
res
df = data.frame(dose = c(0, 0.055, 0.245, 1.1, 5), response = c(-0.000626454, -1.678106357,-1.679125629, -1.281739719, 56.94586951))
library(synergyfinder)
FitDoseResponse(df)
log(coef(FitDoseResponse(df))[4])
exp(coef(FitDoseResponse(df))[4])
model <- FitDoseResponse(df)
plot(model)
model2 <- drc::drm(formula = response ~ dose, data = f, fct = drc::L.4(fixed = c(NA,NA,NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
model2 <- drc::drm(formula = response ~ dose, data = sf, fct = drc::L.4(fixed = c(NA,NA,NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
model2 <- drc::drm(formula = response ~ dose, data = df, fct = drc::L.4(fixed = c(NA,NA,NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
model2 <- drc::drm(formula = response ~ dose, data = df, fct = drc::LL.4(fixed = c(NA,NA,NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
model2
FitDoseResponse
Emin = NA
Emax = NA
data = df
data$dose[which(data$dose == 0)] <- 10^-10
if (nrow(data) != 1 & stats::var(data$response) == 0) {
data$response[nrow(data)] <- data$response[nrow(data)] +
10^-10
}
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
}, warning = function(w) {
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
data
df
data2 <- data2
data2 <- data
data <- df
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
plot(data.model)
plot(drug.model)
model <-    drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
plot(model)
model <- FitDoseResponse(df)
View(df)
model
exp(coef(model)[4])
model2 <- drc::drm(formula = response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,     NA, NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
model2
data
data2
model2 <- drc::drm(formula = response ~ dose, data = data2, fct = drc::LL.4(fixed = c(NA,     NA, NA, NA)), na.action = stats::na.omit,     control = drc::drmc(errorm = FALSE, noMessage = TRUE, otrace = FALSE))
f1 <- function (data, Emin = NA, Emax = NA)
{
if (!all(c("dose", "response") %in% colnames(data))) {
stop("The input must contain columns: \"dose\", \"respone\".")
}
if (nrow(data) != 1 & stats::var(data$response) == 0) {
data$response[nrow(data)] <- data$response[nrow(data)] +
10^-10
}
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
}, warning = function(w) {
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
return(drug.model)
}
f1(df)
df
data <- df
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
if (nrow(data) != 1 & stats::var(data$response) == 0) {
data$response[nrow(data)] <- data$response[nrow(data)] +
10^-10
}
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
f1(df)
f1 <- function(data, Emin = NA, Emax = NA) {
if (!all(c("dose", "response") %in% colnames(data))) {
stop("The input must contain columns: \"dose\", \"respone\".")
}
if (nrow(data) != 1 & stats::var(data$response) == 0) {
data$response[nrow(data)] <- data$response[nrow(data)] +
10^-10
}
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
}, warning = function(w) {
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
return(drug.model)
}
f1(df)
f1(data)
debugSource('~/Desktop/Untitled.R')
f1(data)
data
drug.model
f1(data)
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
debugSource('~/Desktop/Untitled.R')
x <- drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
x
options(warn=0)
x <- drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
+                                                                       Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
+               control = drc::drmc(errorm = FALSE, noMessage = TRUE,
+                                   otrace = TRUE))
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = TRUE))
debugSource('~/Desktop/Untitled.R')
f1(df)
debugSource('~/Desktop/Untitled.R')
f1(df)
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit)
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
}, warning = function(w) {
print(w)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
print("error")
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
}, warning = function(w) {
print(w)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
print(e)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
}, warning = function(w) {
print(w)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
}, error = function(e) {
print(e)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model
plot(drug.model)
x <- drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
plot(x)
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
# }, warning = function(w) {
#   print(w)
#   data$dose[which(data$dose == 0)] <- 10^-10
#   drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
#                                                                        Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
#            control = drc::drmc(errorm = FALSE, noMessage = TRUE,
#                                otrace = FALSE))
}, error = function(e) {
print(e)
data$dose[which(data$dose == 0)] <- 10^-10
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model
data$dose[which(data$dose == 0)] <- 10^-10
drug.model <- tryCatch({
drc::drm(response ~ dose, data = data, fct = drc::LL.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = FALSE,
otrace = TRUE))
# }, warning = function(w) {
#   print(w)
#   data$dose[which(data$dose == 0)] <- 10^-10
#   drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
#                                                                        Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
#            control = drc::drmc(errorm = FALSE, noMessage = TRUE,
#                                otrace = FALSE))
}, error = function(e) {
print(e)
drc::drm(response ~ log(dose), data = data, fct = drc::L.4(fixed = c(NA,
Emin = Emin, Emax = Emax, NA)), na.action = stats::na.omit,
control = drc::drmc(errorm = FALSE, noMessage = TRUE,
otrace = FALSE))
})
drug.model
devtools::install_github("hly89/synergyfinder")
devtools::install_github("hly89/synergyfinder")
?synergyfinder
library(synergyfinder)
?ZIP
?ReshapeData
data("mathews_screening_data")
force(mathews_screening_data)
mat <- ReshapeData(mathews_screening_data)
mat
zip <- CalculateSynergy(data, "ZIP")
zip <- CalculateSynergy(data)
zip <- CalculateSynergy(mat)
zip
?LL.4
?drm::drc
?drc::drm
library(synergyfinder)
data("mathews_screening_data")
mathews_screening_data
head(mathews_screening_data)
setwd("~/Documents/MyLearningNote/Learning_note/Data_science_the_shortcut")
data <- read.csv("./owid_value_2017.csv", stringsAsFactors = FALSE)
data_tidy <- reshape2::dcast(data, fomula)
View(data)
View(data)
data_tidy <- reshape2::dcast(data, entity_name~variable_id, value.var = "value")
View(data_tidy)
apply(data_tidy, 2, function(x) sum(is.na(x)))
apply(data_tidy, 2, function(x) sum(!is.na(x)))
write.csv(data_tidy, "owid_2017_tidy.csv", row.names = FALSE)
